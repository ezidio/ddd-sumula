/**
 * This file was generated by the Jeddict
 */
package br.com.tdc.sumula.tradicional.model;

import br.com.tdc.sumula.tradicional.type.TipoRelacao;

import javax.persistence.*;
import javax.validation.constraints.NotNull;

/**
 * @author everton
 */
@Entity
public class Relacionado {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long id;

    private int numero;

    @Enumerated(EnumType.STRING)
    @NotNull
    private TipoRelacao tipo;

    @ManyToOne(targetEntity = Jogador.class)
    private Jogador jogador;

    public int getNumero() {
        return this.numero;
    }

    public void setNumero(int numero) {
        this.numero = numero;
    }

    public TipoRelacao getTipo() {
        return this.tipo;
    }

    public void setTipo(TipoRelacao tipo) {
        this.tipo = tipo;
    }

    public Jogador getJogador() {
        return this.jogador;
    }

    public void setJogador(Jogador jogador) {
        this.jogador = jogador;
    }

    public Time getTime() {
        return getJogador().getTime();
    }

    public boolean isTitular() {
        return TipoRelacao.TITULAR.equals(this.tipo);
    }

    public boolean isReserva() {
        return TipoRelacao.RESERVA.equals(this.tipo);
    }

    public static Relacionado titular(Integer numero, Jogador jogador) {
        Relacionado relacionado = new Relacionado();
        relacionado.numero = numero;
        relacionado.jogador = jogador;
        relacionado.tipo = TipoRelacao.TITULAR;
        return relacionado;
    }

    public static Relacionado reserva(Integer numero, Jogador jogador) {
        Relacionado relacionado = new Relacionado();
        relacionado.numero = numero;
        relacionado.jogador = jogador;
        relacionado.tipo = TipoRelacao.RESERVA;
        return relacionado;
    }


    public boolean mesmoTimeDe(Relacionado outro) {
        return this.getTime().equals(outro.getTime());
    }
}
